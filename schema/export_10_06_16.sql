-- MySQL Script generated by MySQL Workbench
-- 06/10/16 14:37:55
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema area_riservata
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `area_riservata` ;

-- -----------------------------------------------------
-- Schema area_riservata
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `area_riservata` DEFAULT CHARACTER SET latin1 ;
USE `area_riservata` ;

-- -----------------------------------------------------
-- Table `area_riservata`.`acl_access_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`acl_access_list` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`acl_access_list` (
  `roles_name` VARCHAR(32) NOT NULL,
  `resources_name` VARCHAR(32) NOT NULL,
  `access_name` VARCHAR(32) NOT NULL,
  `allowed` INT(3) NOT NULL,
  PRIMARY KEY (`roles_name`, `resources_name`, `access_name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `resources_name` ON `area_riservata`.`acl_access_list` (`resources_name` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`acl_resources`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`acl_resources` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`acl_resources` (
  `name` VARCHAR(32) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `area_riservata`.`acl_resources_access`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`acl_resources_access` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`acl_resources_access` (
  `resources_name` VARCHAR(32) NOT NULL,
  `access_name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`resources_name`, `access_name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `area_riservata`.`acl_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`acl_roles` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`acl_roles` (
  `name` VARCHAR(32) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `area_riservata`.`acl_roles_inherits`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`acl_roles_inherits` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`acl_roles_inherits` (
  `roles_name` VARCHAR(32) NOT NULL,
  `roles_inherits` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`roles_name`, `roles_inherits`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `area_riservata`.`languages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`languages` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`languages` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `locale` CHAR(5) NOT NULL,
  `is_default` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `locale` ON `area_riservata`.`languages` (`locale` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`settings` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`settings` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `namespace` VARCHAR(112) NULL DEFAULT NULL,
  `controller` VARCHAR(32) NOT NULL,
  `data` BLOB NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `namespace_controller` ON `area_riservata`.`settings` (`namespace` ASC, `controller` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_status` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_status` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `description` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `status` ON `area_riservata`.`users_status` (`name` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status_id` INT(10) UNSIGNED NOT NULL,
  `role` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `users_ibfk_2`
    FOREIGN KEY (`role`)
    REFERENCES `area_riservata`.`acl_roles` (`name`)
    ON DELETE CASCADE,
  CONSTRAINT `users_ibfk_1`
    FOREIGN KEY (`status_id`)
    REFERENCES `area_riservata`.`users_status` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;

CREATE UNIQUE INDEX `email` ON `area_riservata`.`users` (`email` ASC);

CREATE INDEX `status_id` ON `area_riservata`.`users` (`status_id` ASC, `role` ASC);

CREATE INDEX `role` ON `area_riservata`.`users` (`role` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_failed_attempts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_failed_attempts` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_failed_attempts` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `ip_address` INT(10) UNSIGNED NULL DEFAULT NULL,
  `attempted` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 91
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `users_id` ON `area_riservata`.`users_failed_attempts` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_remember_tokens`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_remember_tokens` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_remember_tokens` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `selector` VARCHAR(255) NOT NULL,
  `token` VARCHAR(255) NOT NULL,
  `expires` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `users_remember_tokens_ibfk_1`
    FOREIGN KEY (`users_id`)
    REFERENCES `area_riservata`.`users` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = latin1;

CREATE INDEX `users_id` ON `area_riservata`.`users_remember_tokens` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`app_settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`app_settings` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`app_settings` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `data` BLOB NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `area_riservata`.`app_settings` (`name` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_forgot_password`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_forgot_password` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_forgot_password` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `token` VARCHAR(255) NOT NULL,
  `private_key` VARCHAR(255) NOT NULL,
  `expires` DATETIME NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_users_forgot_password_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_users_forgot_password_users1_idx` ON `area_riservata`.`users_forgot_password` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`translations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`translations` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`translations` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `comment` VARCHAR(255) NULL,
  `msgid` TEXT NOT NULL,
  `msgstr` TEXT NOT NULL,
  `languages_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_translations_languages1`
    FOREIGN KEY (`languages_id`)
    REFERENCES `area_riservata`.`languages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_translations_languages1_idx` ON `area_riservata`.`translations` (`languages_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_details` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_details` (
  `name` VARCHAR(45) NULL,
  `surname` VARCHAR(45) NULL,
  `address` VARCHAR(255) NULL,
  `phone` VARCHAR(45) NULL,
  `portrait` VARCHAR(255) NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`users_id`),
  CONSTRAINT `fk_users_details_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_users_details_users1_idx` ON `area_riservata`.`users_details` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`users_login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`users_login` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`users_login` (
  `last_access` DATETIME NOT NULL,
  `last_operation` DATETIME NULL,
  `online` TINYINT(1) NOT NULL DEFAULT 0,
  `busy` TINYINT(1) NOT NULL DEFAULT 0,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`users_id`),
  CONSTRAINT `fk_users_login_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_users_login_users1_idx` ON `area_riservata`.`users_login` (`users_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_groups` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_groups` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_gruppo` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_state` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_state` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `stato` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_fatturatario` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `customers_groups_id` INT(10) UNSIGNED NOT NULL,
  `customers_state_id` INT(10) UNSIGNED NOT NULL,
  `bookkeeper_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customers_customers_groups1`
    FOREIGN KEY (`customers_groups_id`)
    REFERENCES `area_riservata`.`customers_groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_customers_state1`
    FOREIGN KEY (`customers_state_id`)
    REFERENCES `area_riservata`.`customers_state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_users1`
    FOREIGN KEY (`bookkeeper_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customers_customers_groups1_idx` ON `area_riservata`.`customers` (`customers_groups_id` ASC);

CREATE INDEX `fk_customers_customers_state1_idx` ON `area_riservata`.`customers` (`customers_state_id` ASC);

CREATE INDEX `fk_customers_users1_idx` ON `area_riservata`.`customers` (`bookkeeper_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_address` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_address` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_indirizzo` VARCHAR(32) NULL,
  `indirizzo` TEXT NULL,
  `cap` VARCHAR(32) NULL,
  `citta` VARCHAR(45) NULL,
  `provincia` VARCHAR(45) NULL,
  `regione` VARCHAR(45) NULL,
  `nazione` VARCHAR(45) NULL,
  `customers_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `customers_id`),
  CONSTRAINT `fk_customers_address_customers1`
    FOREIGN KEY (`customers_id`)
    REFERENCES `area_riservata`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_details` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_details` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(45) NULL,
  `fax` VARCHAR(45) NULL,
  `email` VARCHAR(255) NULL,
  `piva` VARCHAR(255) NULL,
  `cf` VARCHAR(255) NULL,
  `epal` TINYINT(1) NULL,
  `monoref` TINYINT(1) NULL,
  `note` TEXT NULL,
  `modalita_pagamento` VARCHAR(45) NULL,
  `customers_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `customers_id`),
  CONSTRAINT `fk_customers_details_customers1`
    FOREIGN KEY (`customers_id`)
    REFERENCES `area_riservata`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`insegne`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`insegne` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`insegne` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_insegna` VARCHAR(4) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `customers_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_insegne_customers1`
    FOREIGN KEY (`customers_id`)
    REFERENCES `area_riservata`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_insegne_customers1_idx` ON `area_riservata`.`insegne` (`customers_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_destinations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_destinations` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_destinations` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_destinazione` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(255) NULL,
  `customers_id` INT(10) UNSIGNED NOT NULL,
  `agent_id` INT(10) UNSIGNED NOT NULL,
  `promotions_manager_id` INT(10) UNSIGNED NOT NULL,
  `insegne_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customers_destinations_customers1`
    FOREIGN KEY (`customers_id`)
    REFERENCES `area_riservata`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_destinations_users1`
    FOREIGN KEY (`agent_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_destinations_users2`
    FOREIGN KEY (`promotions_manager_id`)
    REFERENCES `area_riservata`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_destinations_insegne1`
    FOREIGN KEY (`insegne_id`)
    REFERENCES `area_riservata`.`insegne` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customers_destinations_customers1_idx` ON `area_riservata`.`customers_destinations` (`customers_id` ASC);

CREATE INDEX `fk_customers_destinations_users1_idx` ON `area_riservata`.`customers_destinations` (`agent_id` ASC);

CREATE INDEX `fk_customers_destinations_users2_idx` ON `area_riservata`.`customers_destinations` (`promotions_manager_id` ASC);

CREATE INDEX `fk_customers_destinations_insegne1_idx` ON `area_riservata`.`customers_destinations` (`insegne_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_destinations_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_destinations_address` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_destinations_address` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `codice_indirizzo` VARCHAR(45) NOT NULL,
  `indirizzo` TEXT NULL,
  `cap` VARCHAR(45) NULL,
  `citta` VARCHAR(45) NULL,
  `provincia` VARCHAR(45) NULL,
  `regione` VARCHAR(45) NULL,
  `nazione` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `note` TEXT NULL,
  `customers_destinations_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customers_destinations_address_customers_destinations1`
    FOREIGN KEY (`customers_destinations_id`)
    REFERENCES `area_riservata`.`customers_destinations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customers_destinations_address_customers_destinations1_idx` ON `area_riservata`.`customers_destinations_address` (`customers_destinations_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`price_lists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`price_lists` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`price_lists` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `update_at` DATETIME NULL,
  `has_revisions` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`product` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`product` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`product_prices`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`product_prices` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`product_prices` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `price_list` DECIMAL(15,2) NULL DEFAULT 0,
  `price_retail` DECIMAL(15,2) NULL DEFAULT 0,
  `price_ecommerce` DECIMAL(15,2) NULL DEFAULT 0,
  `product_id` INT(10) UNSIGNED NOT NULL,
  `price_lists_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_products_prices_price_lists1`
    FOREIGN KEY (`price_lists_id`)
    REFERENCES `area_riservata`.`price_lists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_prices_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `area_riservata`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_products_prices_price_lists1_idx` ON `area_riservata`.`product_prices` (`price_lists_id` ASC);

CREATE INDEX `fk_product_prices_product1_idx` ON `area_riservata`.`product_prices` (`product_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`nazioni`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`nazioni` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`nazioni` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `codice_nazione` VARCHAR(2) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `area_riservata`.`regioni`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`regioni` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`regioni` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `codice_istat` VARCHAR(6) NULL,
  `nazioni_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_regioni_nazioni1`
    FOREIGN KEY (`nazioni_id`)
    REFERENCES `area_riservata`.`nazioni` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_regioni_nazioni1_idx` ON `area_riservata`.`regioni` (`nazioni_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`province`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`province` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`province` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `sigla` VARCHAR(2) NOT NULL,
  `codice_istat` VARCHAR(6) NULL,
  `regioni_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_province_regioni1`
    FOREIGN KEY (`regioni_id`)
    REFERENCES `area_riservata`.`regioni` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_province_regioni1_idx` ON `area_riservata`.`province` (`regioni_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`citta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`citta` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`citta` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `cap` VARCHAR(45) NULL,
  `prefisso_telefonico` VARCHAR(45) NULL,
  `codice_istat` VARCHAR(6) NULL,
  `codice_catastale` VARCHAR(45) NULL,
  `lat` FLOAT NULL,
  `lng` FLOAT NULL,
  `province_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_citta_province1`
    FOREIGN KEY (`province_id`)
    REFERENCES `area_riservata`.`province` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_citta_province1_idx` ON `area_riservata`.`citta` (`province_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`price_lists_revisions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`price_lists_revisions` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`price_lists_revisions` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `update_at` DATETIME NULL,
  `price_lists_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_price_lists_revisions_price_lists1`
    FOREIGN KEY (`price_lists_id`)
    REFERENCES `area_riservata`.`price_lists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_price_lists_revisions_price_lists1_idx` ON `area_riservata`.`price_lists_revisions` (`price_lists_id` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`customers_price_lists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`customers_price_lists` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`customers_price_lists` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `customers_id` INT(10) UNSIGNED NOT NULL,
  `listino_vigore` INT(10) UNSIGNED NOT NULL,
  `listino_vigore_revisione` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  `listino_futuro` INT(10) UNSIGNED NOT NULL,
  `listino_futuro_revisione` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  `data_inizio_vigore` DATETIME NOT NULL,
  `data_inizio_futuro` DATETIME NOT NULL,
  `data_fine_vigore` DATETIME NULL,
  `data_fine_futuro` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customers_price_lists_customers1`
    FOREIGN KEY (`customers_id`)
    REFERENCES `area_riservata`.`customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_price_lists_price_lists1`
    FOREIGN KEY (`listino_vigore`)
    REFERENCES `area_riservata`.`price_lists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_price_lists_price_lists2`
    FOREIGN KEY (`listino_futuro`)
    REFERENCES `area_riservata`.`price_lists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customers_price_lists_customers1_idx` ON `area_riservata`.`customers_price_lists` (`customers_id` ASC);

CREATE INDEX `fk_customers_price_lists_price_lists1_idx` ON `area_riservata`.`customers_price_lists` (`listino_vigore` ASC);

CREATE INDEX `fk_customers_price_lists_price_lists2_idx` ON `area_riservata`.`customers_price_lists` (`listino_futuro` ASC);


-- -----------------------------------------------------
-- Table `area_riservata`.`product_prices_revisions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `area_riservata`.`product_prices_revisions` ;

CREATE TABLE IF NOT EXISTS `area_riservata`.`product_prices_revisions` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `product_prices_id` INT(10) UNSIGNED NOT NULL,
  `price_lists_revisions_id` INT(10) UNSIGNED NOT NULL,
  `price_list` DECIMAL(15,2) NULL DEFAULT 0,
  `price_retail` DECIMAL(15,2) NULL DEFAULT 0,
  `price_ecommerce` DECIMAL(15,2) NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_product_prices_revisions_product_prices1`
    FOREIGN KEY (`product_prices_id`)
    REFERENCES `area_riservata`.`product_prices` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_prices_revisions_price_lists_revisions1`
    FOREIGN KEY (`price_lists_revisions_id`)
    REFERENCES `area_riservata`.`price_lists_revisions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_product_prices_revisions_product_prices1_idx` ON `area_riservata`.`product_prices_revisions` (`product_prices_id` ASC);

CREATE INDEX `fk_product_prices_revisions_price_lists_revisions1_idx` ON `area_riservata`.`product_prices_revisions` (`price_lists_revisions_id` ASC);

USE `area_riservata`;

DELIMITER $$

USE `area_riservata`$$
DROP TRIGGER IF EXISTS `area_riservata`.`acl_resources_after_delete` $$
USE `area_riservata`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `area_riservata`.`acl_resources_after_delete`
AFTER DELETE ON `area_riservata`.`acl_resources`
FOR EACH ROW
BEGIN
DELETE FROM acl_resources_access WHERE resources_name = OLD.name ;
DELETE FROM acl_access_list WHERE resources_name = OLD.name ;
END$$


USE `area_riservata`$$
DROP TRIGGER IF EXISTS `area_riservata`.`acl_roles_after_delete` $$
USE `area_riservata`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `area_riservata`.`acl_roles_after_delete`
AFTER DELETE ON `area_riservata`.`acl_roles`
FOR EACH ROW
BEGIN
DELETE FROM acl_roles_inherits WHERE roles_inherits = OLD.name ;
DELETE FROM acl_access_list WHERE roles_name = OLD.name;
END$$


USE `area_riservata`$$
DROP TRIGGER IF EXISTS `area_riservata`.`languages_before_insert` $$
USE `area_riservata`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `area_riservata`.`languages_before_insert`
BEFORE INSERT ON `area_riservata`.`languages`
FOR EACH ROW
BEGIN
	DECLARE howMany TINYINT(1);
	DECLARE hasDefault TINYINT(1);
    SELECT COUNT(*) FROM languages INTO howMany;
    SELECT SUM(is_default) FROM languages INTO hasDefault ;
    IF howMany = 0 THEN
    	SET NEW.is_default = 1 ;
    END IF;
    IF hasDefault AND NEW.is_default THEN
    	SET NEW.is_default = 0 ;
    END IF;
END$$


USE `area_riservata`$$
DROP TRIGGER IF EXISTS `area_riservata`.`languages_before_update` $$
USE `area_riservata`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `area_riservata`.`languages_before_update`
BEFORE UPDATE ON `area_riservata`.`languages`
FOR EACH ROW
BEGIN
	DECLARE hasDefault TINYINT(1);
    SELECT SUM(is_default) FROM languages INTO hasDefault ;
    IF hasDefault AND NEW.is_default THEN
    	SET NEW.is_default = 0 ;
    END IF;
END$$


USE `area_riservata`$$
DROP TRIGGER IF EXISTS `area_riservata`.`settings_before_insert` $$
USE `area_riservata`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `area_riservata`.`settings_before_insert`
BEFORE INSERT ON `area_riservata`.`settings`
FOR EACH ROW
BEGIN
	IF NEW.namespace IS NULL THEN
    	SET NEW.namespace = '' ;
    END IF ;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
